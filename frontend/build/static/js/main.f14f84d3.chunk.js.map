{"version":3,"sources":["components/Treemap.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Treemap","props","useState","treeData","setTreeData","treeLayout","setTreeLayout","loading","setLoading","useEffect","fetch","process","filename","then","response","json","resData","string","type","labels","label","parents","parent","values","value","branchvalues","marker","colors","color","colorscale","cmid","avg_carbon_per_capi","hovertemplate","margin","t","l","r","b","title","charAt","toUpperCase","slice","autosize","font","size","plot_bgcolor","annotations","showarrow","text","x","xanchor","y","yanchor","Plotly","react","responsive","setTimeout","window","dispatchEvent","Event","drawerOpen","id","style","height","drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","backgroundColor","width","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","Home","useTheme","React","setOpen","tabValue","setTabValue","setFilename","Box","sx","CssBaseline","position","Toolbar","IconButton","onClick","edge","mr","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","ListItem","button","event","ListItemIcon","ListItemText","primary","Tabs","onChange","newValue","Tab","icon","App","getMessage","setGetMessage","axios","get","catch","error","console","log","className","rel","href","status","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f14f84d3.chunk.js","sourcesContent":["// import { Row, Col, Container, Card, CardGroup, Breadcrumb, CardColumns } from 'react-bootstrap';\nimport Plotly from \"plotly.js\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction Treemap(props) {\n  const [treeData, setTreeData] = useState(false);\n  const [treeLayout, setTreeLayout] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    setTreeData(false);\n\n    fetch(process.env.REACT_APP_DOMAIN + \"/get-data/\" + props.filename)\n      .then((response) => response.json())\n      .then((resData) => {\n        setTreeData({\n          type: \"treemap\",\n          labels: resData.label,\n          parents: resData.parent,\n          values: resData.value,\n          branchvalues: \"total\",\n          marker: {\n            colors: resData.color,\n            colorscale: \"Jet\",\n            cmid: resData.avg_carbon_per_capi,\n          },\n          hovertemplate:\n            \"<b>%{label} </b> <br> Capitalization: %{value}<br> Carbon : %{color:,}<extra></extra>\",\n          //   maxdepth: 2,\n        });\n        setTreeLayout({\n          margin: { t: 50, l: 25, r: 25, b: 25 },\n          title:\n            \"GES et market cap. - \" + capitalizeFirstLetter(props.filename),\n          autosize: true,\n          font: {\n            size: 14,\n            plot_bgcolor: \"black\",\n          },\n          annotations: [\n            {\n              showarrow: false,\n              text: \"<i>Taille des zones : market cap. ; Couleur des zones : GES</i>\",\n              x: 0.5,\n              xanchor: \"center\",\n              y: -0.05,\n              yanchor: \"bottom\",\n            },\n          ],\n        });\n        setLoading(false);\n      });\n  }, [props.filename]);\n\n  useEffect(() => {\n    if (!loading && treeData) {\n      Plotly.react(\"treemap\", [treeData], treeLayout, { responsive: true });\n    }\n  }, [treeData, treeLayout, loading]);\n\n  useEffect(() => {\n    setTimeout(function () {\n      window.dispatchEvent(new Event(\"resize\"));\n    }, 100);\n  }, [props.drawerOpen]);\n\n  return (\n    <div>\n      {loading === true && !treeData ? (\n        <div> Loading data </div>\n      ) : (\n        <div>\n          <div id=\"treemap\" style={{ height: \"80vh\" }} />{\" \"}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Treemap;\n","import * as React from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport Treemap from \"../components/Treemap\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport TableChartIcon from \"@mui/icons-material/TableChart\";\nimport TableRowsIcon from \"@mui/icons-material/TableRows\";\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  backgroundColor: \"White\",\n  color: \"black\",\n  transition: theme.transitions.create([\"margin\", \"width\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nexport default function Home() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const [filename, setFilename] = React.useState(\"entreprises\");\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: \"none\" }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Représentation graphique des émissions de GES\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            key={\"Pays\"}\n            onClick={(event) => setFilename(\"pays\")}\n          >\n            <ListItemIcon>\n              <PublicIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Pays\"} />\n          </ListItem>\n\n          <ListItem\n            button\n            key={\"Entreprises\"}\n            onClick={(event) => setFilename(\"entreprises\")}\n          >\n            <ListItemIcon>\n              <BusinessIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Entreprises\"} />\n          </ListItem>\n        </List>\n\n        <Divider />\n\n        <List>\n          <ListItem button key={\"About\"}>\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n        <Tabs\n          value={tabValue}\n          onChange={handleChangeTab}\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<TableChartIcon />} aria-label=\"chart\" />\n          <Tab icon={<TableRowsIcon />} aria-label=\"table\" />\n        </Tabs>\n        {tabValue === 0 ? (\n          <Treemap filename={filename} drawerOpen={open} />\n        ) : (\n          <div />\n        )}\n      </Main>\n    </Box>\n  );\n}\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\n\n\nfunction App() {\n\n  const [getMessage, setGetMessage] = useState({})\n\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_DOMAIN + '/api').then(response => {\n      setGetMessage(response)\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      {getMessage.status === 200 ?\n        <Router>\n          <Route exact path='/' component={Home} ></Route>\n        </Router >\n        :\n        <h3>LOADING</h3>}</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}