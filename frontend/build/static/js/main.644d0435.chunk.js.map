{"version":3,"sources":["components/Treemap.js","components/Layout.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Treemap","props","useState","data","setData","treeData","setTreeData","treeLayout","setTreeLayout","loading","setLoading","year","setYear","years","setYears","alert","setAlert","useEffect","fetch","process","filename","then","response","json","resData","status","Object","keys","length","map","label","value","parseInt","margin","t","l","r","b","title","autosize","font","size","plot_bgcolor","annotations","showarrow","text","x","xanchor","y","yanchor","message","a","includes","Plotly","react","type","labels","parents","parent","values","branchvalues","marker","colors","color","colorscale","cmid","tco2_eq_mean","hovertemplate","responsive","setTimeout","window","dispatchEvent","Event","open","Grid","container","spacing","alignItems","item","xs","Slider","style","height","getAriaLabel","orientation","defaultValue","Math","max","step","onChange","event","target","handleSliderChange","marks","min","id","Alert","marginTop","severity","drawerWidth","Main","styled","shouldForwardProp","prop","theme","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","backgroundColor","width","DrawerHeader","display","mixins","toolbar","justifyContent","Layout","children","useTheme","React","setOpen","setFilename","files","setFiles","childrenWithProps","Children","child","isValidElement","cloneElement","refresh","axios","get","catch","error","console","log","Box","sx","CssBaseline","position","Toolbar","IconButton","onClick","edge","mr","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","file","ListItem","button","ListItemIcon","ListItemText","primary","Home","tabValue","setTabValue","Tabs","newValue","Tab","icon","App","getMessage","setGetMessage","className","rel","href","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA4LeA,MArLf,SAAiBC,GACf,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwBR,oBAAS,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAA0BV,oBAAS,GAAnC,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAA0BZ,oBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KAoHA,OAlHAC,qBAAU,WACRP,GAAW,GACXJ,GAAY,GAEZY,MAAMC,iDAA8ClB,EAAMmB,UACvDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACkB,WAAnBA,EAAQC,QACVT,GAAS,GACTJ,EAAQc,OAAOC,KAAKH,GAASE,OAAOC,KAAKH,GAASI,OAAS,IAC3Dd,EACEY,OAAOC,KAAKH,GAASK,KAAI,SAAClB,GAAD,MAAW,CAClCmB,MAAOnB,EACPoB,MAAOC,SAASrB,QAGpBP,EAAQoB,GACRhB,EAAc,CACZyB,OAAQ,CAAEC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAClCC,MACqB,gBAAnBrC,EAAMmB,SACF,mCACA,uCACNmB,UAAU,EACVC,KAAM,CACJC,KAAM,GACNC,aAAc,SAEhBC,YAAa,CACX,CACEC,WAAW,EACXC,KACqB,gBAAnB5C,EAAMmB,SACF,kEACA,6EACN0B,EAAG,GACHC,QAAS,SACTC,GAAI,IACJC,QAAS,aAIfvC,GAAW,IAEXM,EAASQ,EAAQ0B,cAGtB,CAACjD,EAAMmB,WAEVH,qBAAU,WACJN,GAAQR,GAAQU,GAEhBA,EACGgB,KAAI,SAAUsB,GACb,OAAOA,EAAEpB,SAEVqB,SAASpB,SAASrB,KAErBL,EAAYH,EAAKQ,MAGpB,CAACA,EAAMR,EAAMU,IAEhBI,qBAAU,YACHR,GAAWJ,GACdgD,IAAOC,MACL,UACA,CACE,CACEC,KAAM,UACNC,OAAQnD,EAASyB,MACjB2B,QAASpD,EAASqD,OAClBC,OAAQtD,EAAS0B,MACjB6B,aAAc,QACdC,OAAQ,CACNC,OAAQzD,EAAS0D,MACjBC,WAAY,CACV,CAAC,MAAO,WACR,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,WACnB,CAAC,MAAO,YAEVC,KAAM5D,EAAS6D,cAEjBC,cACqB,gBAAnBlE,EAAMmB,SACF,mFACA,gGAKVb,EACA,CAAE6D,YAAY,MAGjB,CAAC/D,EAAUE,EAAYE,EAASR,EAAMmB,WAEzCH,qBAAU,WACRoD,YAAW,WACTC,OAAOC,cAAc,IAAIC,MAAM,aAC9B,OACF,CAACvE,EAAMwE,OAOR,+BACe,IAAZhE,GAAqBJ,GAAaQ,GAAUF,EAmB3C,eAAC+D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,IAAIC,WAAW,SAAvC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,QACjBC,aAAc,iBAAM,QACpBC,YAAY,WACZC,aAAc,CACZC,KAAKC,IAAL,MAAAD,KAAI,YACCzE,EAAMgB,KAAI,SAAUsB,GACrB,OAAOA,EAAEpB,YAIfyD,KAAM,EACNC,SAAU,SAACC,GAAD,OAvCK,SAACA,GAC1B9E,EAAQ8E,EAAMC,OAAO5D,OAsCU6D,CAAmBF,IACxCG,MAAOhF,EACP0E,IAAKD,KAAKC,IAAL,MAAAD,KAAI,YACJzE,EAAMgB,KAAI,SAAUsB,GACrB,OAAOA,EAAEpB,WAGb+D,IAAKR,KAAKQ,IAAL,MAAAR,KAAI,YACJzE,EAAMgB,KAAI,SAAUsB,GACrB,OAAOA,EAAEpB,eAKjB,eAAC2C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACE,qBAAKgB,GAAG,UAAUd,MAAO,CAAEC,OAAQ,UAAa,UA/CpD,8BACGnE,EACC,cAACiF,EAAA,EAAD,CAAOf,MAAO,CAAEgB,UAAW,OAASC,SAAS,QAA7C,SACE,gCACE,sKAKA,uBACCnF,OAIL,sD,qTC7HNoF,EAAc,IAEdC,GAAOC,YAAO,OAAQ,CAAEC,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAA9CF,EACX,gBAAGG,EAAH,EAAGA,MAAO/B,EAAV,EAAUA,KAAV,oBACEgC,SAAU,EACVC,QAASF,EAAM5B,QAAQ,GACvB+B,WAAYH,EAAMI,YAAYC,OAAO,SAAU,CAC7CC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,gBAEvCC,WAAW,IAAD,OAAMf,EAAN,OACN1B,GAAQ,CACVkC,WAAYH,EAAMI,YAAYC,OAAO,SAAU,CAC7CC,OAAQN,EAAMI,YAAYE,OAAOK,QACjCH,SAAUR,EAAMI,YAAYI,SAASI,iBAEvCF,WAAY,OAKZG,GAAShB,YAAOiB,IAAW,CAC/BhB,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IADhBF,EAEZ,gBAAGG,EAAH,EAAGA,MAAO/B,EAAV,EAAUA,KAAV,oBACD8C,gBAAiB,QACjBxD,MAAO,QACP4C,WAAYH,EAAMI,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,iBAEnCxC,GAAQ,CACV+C,MAAM,eAAD,OAAiBrB,EAAjB,OACLe,WAAW,GAAD,OAAKf,EAAL,MACVQ,WAAYH,EAAMI,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQN,EAAMI,YAAYE,OAAOK,QACjCH,SAAUR,EAAMI,YAAYI,SAASI,sBAKrCK,GAAepB,YAAO,MAAPA,EAAc,gBAAGG,EAAH,EAAGA,MAAH,mBAAC,aAClCkB,QAAS,OACT7C,WAAY,SACZ6B,QAASF,EAAM5B,QAAQ,EAAG,IAEvB4B,EAAMmB,OAAOC,SALiB,IAMjCC,eAAgB,gBAGH,SAASC,GAAT,GAA+B,IAAbC,EAAY,EAAZA,SACzBvB,EAAQwB,cACd,EAAwBC,IAAM/H,UAAS,GAAvC,mBAAOuE,EAAP,KAAayD,EAAb,KAWA,EAAgCD,IAAM/H,SAAS,YAA/C,mBAAOkB,EAAP,KAAiB+G,EAAjB,KACA,EAA0BF,IAAM/H,SAAS,IAAzC,mBAAOkI,EAAP,KAAcC,EAAd,KAEMC,EAAoBL,IAAMM,SAAS1G,IAAIkG,GAAU,SAAAS,GAGrD,OAAIP,IAAMQ,eAAeD,GAChBP,IAAMS,aAAaF,EAAO,CAAE/D,OAAKrD,aAEnCoH,KAGT,SAASG,IAAYC,IACpBC,IAAI1H,kDACJE,MAAK,SAACC,GACL+G,EAAS/G,EAASnB,SAEnB2I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAOd,OAJA9H,qBAAU,WACR0H,MACC,IAGD,eAACO,EAAA,EAAD,CAAKC,GAAI,CAAEzB,QAAS,QAApB,UACE,cAAC0B,EAAA,EAAD,IACA,cAAC,GAAD,CAAQC,SAAS,QAAQ5E,KAAMA,EAA/B,SACE,eAAC6E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACExF,MAAM,UACN,aAAW,cACXyF,QA1Ce,WACvBtB,GAAQ,IA0CAuB,KAAK,QACLN,GAAE,aAAIO,GAAI,GAAOjF,GAAQ,CAAEiD,QAAS,SALtC,SAOE,cAAC,IAAD,MAEF,cAACiC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAACC,UAAU,MAA1C,sEAKJ,eAACC,EAAA,EAAD,CACEZ,GAAI,CACF3B,MAAOrB,EACP6D,WAAY,EACZ,qBAAsB,CACpBxC,MAAOrB,EACP8D,UAAW,eAGfL,QAAQ,aACRM,OAAO,OACPzF,KAAMA,EAXR,UAaE,cAACgD,GAAD,UACE,cAAC8B,EAAA,EAAD,CAAYC,QA/DM,WACxBtB,GAAQ,IA8DF,SACuB,QAApB1B,EAAM2D,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,QAIN,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACCjC,EAAMvG,KAAI,SAACyI,GAAD,OAAU,eAACC,EAAA,EAAD,CACjBC,QAAM,EAENhB,QAAS,SAAC9D,GAAD,OAAWyC,EAAYmC,IAHf,UAKjB,cAACG,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAASL,MANlBA,MAWP,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAiBhB,QAAS,SAAC9D,GAAD,OAAWiD,KAArD,UACE,cAAC8B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,oBAJH,cAOxB,cAACP,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,YAJH,cAQ1B,eAACvE,GAAD,CAAM3B,KAAMA,EAAZ,UACE,cAACgD,GAAD,IACCa,QChLM,SAASsC,GAAT,GAAiC,IAAlBnG,EAAiB,EAAjBA,KAAMrD,EAAW,EAAXA,SAElC,EAAgC6G,WAAe,GAA/C,mBAAO4C,EAAP,KAAiBC,EAAjB,KAMA,OACK,eAAChD,GAAD,WACC,eAACiD,EAAA,EAAD,CACEhJ,MAAO8I,EACPpF,SARgB,SAACC,EAAOsF,GAC9BF,EAAYE,IAQN,aAAW,oBAHb,UAKE,cAACC,EAAA,EAAD,CAAKC,KAAM,cAAC,IAAD,IAAoB,aAAW,UAC1C,cAACD,EAAA,EAAD,CAAKC,KAAM,cAAC,IAAD,IAAmB,aAAW,aAE7B,IAAbL,EACC,cAAC,EAAD,CAASzJ,SAAUA,EAAUqD,KAAMA,IAEnC,2BCUK0G,OAjCf,WACE,MAAoCjL,mBAAS,IAA7C,mBAAOkL,EAAP,KAAmBC,EAAnB,KAaA,OAXApK,qBAAU,WACR2H,IACGC,IAAI1H,4CACJE,MAAK,SAACC,GACL+J,EAAc/J,MAEfwH,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAGD,sBAAKuC,UAAU,MAAf,UACE,sBACEC,IAAI,aACJC,KAAK,gFAEgB,MAAtBJ,EAAW3J,OACV,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgK,OAAK,EAACC,KAAK,IAAI5B,UAAWc,SAIrC,6CCtBOe,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBxK,MAAK,YAAkD,IAA/CyK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.644d0435.chunk.js","sourcesContent":["// import { Row, Col, Container, Card, CardGroup, Breadcrumb, CardColumns } from 'react-bootstrap';\nimport Alert from \"@mui/material/Alert\";\nimport Plotly from \"plotly.js\";\nimport Slider from \"@mui/material/Slider\";\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nfunction Treemap(props) {\n  const [data, setData] = useState(false);\n  const [treeData, setTreeData] = useState(false);\n  const [treeLayout, setTreeLayout] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [year, setYear] = useState(false);\n  const [years, setYears] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setTreeData(false);\n\n    fetch(process.env.REACT_APP_DOMAIN + \"/get-data/\" + props.filename)\n      .then((response) => response.json())\n      .then((resData) => {\n        if (resData.status !== 'failed') {\n          setAlert(false);\n          setYear(Object.keys(resData)[Object.keys(resData).length - 1]);\n          setYears(\n            Object.keys(resData).map((year) => ({\n              label: year,\n              value: parseInt(year),\n            }))\n          );\n          setData(resData);\n          setTreeLayout({\n            margin: { t: 50, l: 25, r: 25, b: 25 },\n            title:\n              props.filename === \"entreprises\"\n                ? \"GES et market cap. - Entreprises\"\n                : \"GES par habitant et GES total - Pays\",\n            autosize: true,\n            font: {\n              size: 14,\n              plot_bgcolor: \"black\",\n            },\n            annotations: [\n              {\n                showarrow: false,\n                text:\n                  props.filename === \"entreprises\"\n                    ? \"<i>Taille des zones : market cap. ; Couleur des zones : GES</i>\"\n                    : \"<i>Taille des zones : GES total ; Couleur des zones : GES par habitant</i>\",\n                x: 0.5,\n                xanchor: \"center\",\n                y: -0.05,\n                yanchor: \"bottom\",\n              },\n            ],\n          });\n          setLoading(false);\n        } else {\n          setAlert(resData.message);\n        }\n      });\n  }, [props.filename]);\n\n  useEffect(() => {\n    if (year && data && years) {\n      if (\n        years\n          .map(function (a) {\n            return a.value;\n          })\n          .includes(parseInt(year))\n      ) {\n        setTreeData(data[year]);\n      }\n    }\n  }, [year, data, years]);\n\n  useEffect(() => {\n    if (!loading && treeData) {\n      Plotly.react(\n        \"treemap\",\n        [\n          {\n            type: \"treemap\",\n            labels: treeData.label,\n            parents: treeData.parent,\n            values: treeData.value,\n            branchvalues: \"total\",\n            marker: {\n              colors: treeData.color,\n              colorscale: [\n                [\"0.0\", \"#00FF00\"],\n                [\"0.111111111111\", \"#35FF00\"],\n                [\"0.222222222222\", \"#6AFF00\"],\n                [\"0.333333333333\", \"#9FFF00\"],\n                [\"0.444444444444\", \"#D4FF00\"],\n                [\"0.555555555556\", \"#FFF600\"],\n                [\"0.666666666667\", \"#FFC100\"],\n                [\"0.777777777778\", \"#FF8C00\"],\n                [\"0.888888888889\", \"#FF5700\"],\n                [\"1.0\", \"#FF1100\"],\n              ],\n              cmid: treeData.tco2_eq_mean,\n            },\n            hovertemplate:\n              props.filename === \"entreprises\"\n                ? \"<b>%{label} </b> <br> Market cap. : %{value}<br> GES : %{color:,}<extra></extra>\"\n                : \"<b>%{label} </b> <br> GES Total : %{value}<br> GES par habitant : %{color:,}<extra></extra>\",\n\n            //   maxdepth: 2,\n          },\n        ],\n        treeLayout,\n        { responsive: true }\n      );\n    }\n  }, [treeData, treeLayout, loading, props.filename]);\n\n  useEffect(() => {\n    setTimeout(function () {\n      window.dispatchEvent(new Event(\"resize\"));\n    }, 100);\n  }, [props.open]);\n\n  const handleSliderChange = (event) => {\n    setYear(event.target.value);\n  };\n\n  return (\n    <div>\n      {loading === true || !treeData || !years || !year ? (\n        <div>\n          {alert ? (\n            <Alert style={{ marginTop: \"2vh\" }} severity=\"error\">\n              <div>\n                <div>\n                  Something went wrong. The file is probably not matching with\n                  compatible templates. Double check file or send below message\n                  to Nico:\n                </div>\n                <br />\n                {alert}\n              </div>\n            </Alert>\n          ) : (\n            <div> Loading data </div>\n          )}\n        </div>\n      ) : (\n        <Grid container spacing=\"1\" alignItems=\"center\">\n          <Grid item xs={1}>\n            <Slider\n              style={{ height: \"50vh\" }}\n              getAriaLabel={() => \"Year\"}\n              orientation=\"vertical\"\n              defaultValue={[\n                Math.max(\n                  ...years.map(function (a) {\n                    return a.value;\n                  })\n                ),\n              ]}\n              step={1}\n              onChange={(event) => handleSliderChange(event)}\n              marks={years}\n              max={Math.max(\n                ...years.map(function (a) {\n                  return a.value;\n                })\n              )}\n              min={Math.min(\n                ...years.map(function (a) {\n                  return a.value;\n                })\n              )}\n            />\n          </Grid>\n          <Grid item xs={11}>\n            <div id=\"treemap\" style={{ height: \"80vh\" }} />{\" \"}\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nexport default Treemap;\n","import React, { useEffect } from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport axios from \"axios\";\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  backgroundColor: \"White\",\n  color: \"black\",\n  transition: theme.transitions.create([\"margin\", \"width\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nexport default function Layout({ children }) {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const [filename, setFilename] = React.useState(\"pays.csv\");\n  const [files, setFiles] = React.useState([]);\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { open,filename });\n    }\n    return child;\n  });\n\n  function refresh() { axios\n  .get(process.env.REACT_APP_DOMAIN + \"/get-files\")\n  .then((response) => {\n    setFiles(response.data)\n  })\n  .catch((error) => {\n    console.log(error);\n  });}\n\n  useEffect(() => {\n    refresh()\n  }, []);\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: \"none\" }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Représentation graphique des émissions de GES\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n        {files.map((file) => <ListItem\n            button\n            key={file}\n            onClick={(event) => setFilename(file)}\n          >\n            <ListItemIcon>\n              <TimelineIcon />\n            </ListItemIcon>\n            <ListItemText primary={file} />\n          </ListItem>)}\n\n        \n\n          <ListItem button key={\"Refresh\"} onClick={(event) => refresh()}>\n            <ListItemIcon>\n              <RefreshIcon/>\n            </ListItemIcon>\n            <ListItemText primary={\"Refresh Drive\"} />\n          </ListItem>\n        </List>\n        <Divider />\n\n        <List>\n          <ListItem button key={\"About\"}>\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n        {childrenWithProps}\n\n      </Main>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Treemap from \"../components/Treemap\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport TableChartIcon from \"@mui/icons-material/TableChart\";\nimport TableRowsIcon from \"@mui/icons-material/TableRows\";\nimport Layout from '../components/Layout'\n\n\nexport default function Home({open, filename}) {\n  \n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleChangeTab = (event, newValue) => {  \n    setTabValue(newValue);\n  };\n  \n  return (\n       <Layout>\n        <Tabs\n          value={tabValue}\n          onChange={handleChangeTab}\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<TableChartIcon />} aria-label=\"chart\" />\n          <Tab icon={<TableRowsIcon />} aria-label=\"table\" />\n        </Tabs>\n        {tabValue === 0 ? (\n          <Treemap filename={filename} open={open} />\n        ) : (\n          <div />\n        )}\n  </Layout>);\n}\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\n\nfunction App() {\n  const [getMessage, setGetMessage] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_DOMAIN + \"/api\")\n      .then((response) => {\n        setGetMessage(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n      />\n      {getMessage.status === 200 ? (\n        <div>\n          <Router>\n            <Route exact path=\"/\" component={Home}  ></Route>\n          </Router>\n        </div> \n      ) : (\n        <h3>LOADING</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}