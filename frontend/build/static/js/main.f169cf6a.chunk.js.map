{"version":3,"sources":["components/Treemap.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Treemap","props","useState","data","setData","treeData","setTreeData","treeLayout","setTreeLayout","loading","setLoading","year","setYear","years","setYears","useEffect","fetch","process","filename","then","response","json","resData","Object","keys","length","map","label","value","parseInt","margin","t","l","r","b","title","autosize","font","size","plot_bgcolor","annotations","showarrow","text","x","xanchor","y","yanchor","a","includes","console","log","tco2_eq_mean","Plotly","react","type","labels","parents","parent","values","branchvalues","marker","colors","color","colorscale","cmid","hovertemplate","responsive","setTimeout","window","dispatchEvent","Event","drawerOpen","Grid","container","spacing","alignItems","item","xs","Slider","style","height","getAriaLabel","orientation","defaultValue","Math","max","step","onChange","event","target","handleSliderChange","marks","min","id","drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","backgroundColor","width","DrawerHeader","display","mixins","toolbar","justifyContent","Home","useTheme","React","setOpen","tabValue","setTabValue","setFilename","Box","sx","CssBaseline","position","Toolbar","IconButton","onClick","edge","mr","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","Tabs","newValue","Tab","icon","App","getMessage","setGetMessage","axios","get","catch","error","className","rel","href","status","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f169cf6a.chunk.js","sourcesContent":["// import { Row, Col, Container, Card, CardGroup, Breadcrumb, CardColumns } from 'react-bootstrap';\nimport Plotly from \"plotly.js\";\nimport Slider from \"@mui/material/Slider\";\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nfunction Treemap(props) {\n  const [data, setData] = useState(false);\n  const [treeData, setTreeData] = useState(false);\n  const [treeLayout, setTreeLayout] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [year, setYear] = useState(false);\n  const [years, setYears] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setTreeData(false);\n\n    fetch(process.env.REACT_APP_DOMAIN + \"/get-data/\" + props.filename)\n      .then((response) => response.json())\n      .then((resData) => {\n        setYear(Object.keys(resData)[Object.keys(resData).length - 1]);\n        setYears(\n          Object.keys(resData).map((year) => ({\n            label: year,\n            value: parseInt(year),\n          }))\n        );\n        setData(resData);\n        setTreeLayout({\n          margin: { t: 50, l: 25, r: 25, b: 25 },\n          title:\n            props.filename === \"entreprises\"\n              ? \"GES et market cap. - Entreprises\"\n              : \"GES par habitant et GES total - Pays\",\n          autosize: true,\n          font: {\n            size: 14,\n            plot_bgcolor: \"black\",\n          },\n          annotations: [\n            {\n              showarrow: false,\n              text:\n                props.filename === \"entreprises\"\n                  ? \"<i>Taille des zones : market cap. ; Couleur des zones : GES</i>\"\n                  : \"<i>Taille des zones : GES total ; Couleur des zones : GES par habitant</i>\",\n              x: 0.5,\n              xanchor: \"center\",\n              y: -0.05,\n              yanchor: \"bottom\",\n            },\n          ],\n        });\n        setLoading(false);\n      });\n  }, [props.filename]);\n\n  useEffect(() => {\n    if (year && data && years) {\n      if (\n        years\n          .map(function (a) {\n            return a.value;\n          })\n          .includes(parseInt(year))\n      ) {\n        setTreeData(data[year]);\n      }\n    }\n  }, [year, data, years]);\n\n  useEffect(() => {\n    if (!loading && treeData) {\n      console.log(treeData.tco2_eq_mean);\n      Plotly.react(\n        \"treemap\",\n        [\n          {\n            type: \"treemap\",\n            labels: treeData.label,\n            parents: treeData.parent,\n            values: treeData.value,\n            branchvalues: \"total\",\n            marker: {\n              colors: treeData.color,\n              colorscale: [\n                [\"0.0\", \"#00FF00\"],\n                [\"0.111111111111\", \"#35FF00\"],\n                [\"0.222222222222\", \"#6AFF00\"],\n                [\"0.333333333333\", \"#9FFF00\"],\n                [\"0.444444444444\", \"#D4FF00\"],\n                [\"0.555555555556\", \"#FFF600\"],\n                [\"0.666666666667\", \"#FFC100\"],\n                [\"0.777777777778\", \"#FF8C00\"],\n                [\"0.888888888889\", \"#FF5700\"],\n                [\"1.0\", \"#FF1100\"],\n              ],\n              cmid: treeData.tco2_eq_mean,\n            },\n            hovertemplate:\n              props.filename === \"entreprises\"\n                ? \"<b>%{label} </b> <br> Market cap. : %{value}<br> GES : %{color:,}<extra></extra>\"\n                : \"<b>%{label} </b> <br> GES Total : %{value}<br> GES par habitant : %{color:,}<extra></extra>\",\n\n            //   maxdepth: 2,\n          },\n        ],\n        treeLayout,\n        { responsive: true }\n      );\n    }\n  }, [treeData, treeLayout, loading, props.filename]);\n\n  useEffect(() => {\n    setTimeout(function () {\n      window.dispatchEvent(new Event(\"resize\"));\n    }, 100);\n  }, [props.drawerOpen]);\n\n  const handleSliderChange = (event) => {\n    setYear(event.target.value);\n  };\n\n  return (\n    <div>\n      {loading === true || !treeData || !years || !year ? (\n        <div> Loading data </div>\n      ) : (\n        <Grid container spacing=\"1\" alignItems=\"center\">\n          <Grid item xs={1}>\n            <Slider\n              style={{ height: \"50vh\" }}\n              getAriaLabel={() => \"Year\"}\n              orientation=\"vertical\"\n              defaultValue={[\n                Math.max(\n                  ...years.map(function (a) {\n                    return a.value;\n                  })\n                ),\n              ]}\n              step={1}\n              onChange={(event) => handleSliderChange(event)}\n              marks={years}\n              max={Math.max(\n                ...years.map(function (a) {\n                  return a.value;\n                })\n              )}\n              min={Math.min(\n                ...years.map(function (a) {\n                  return a.value;\n                })\n              )}\n            />\n          </Grid>\n          <Grid item xs={11}>\n            <div id=\"treemap\" style={{ height: \"80vh\" }} />{\" \"}\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nexport default Treemap;\n","import * as React from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport Treemap from \"../components/Treemap\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport TableChartIcon from \"@mui/icons-material/TableChart\";\nimport TableRowsIcon from \"@mui/icons-material/TableRows\";\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  backgroundColor: \"White\",\n  color: \"black\",\n  transition: theme.transitions.create([\"margin\", \"width\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nexport default function Home() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const [filename, setFilename] = React.useState(\"pays\");\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: \"none\" }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Représentation graphique des émissions de GES\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            key={\"Pays\"}\n            onClick={(event) => setFilename(\"pays\")}\n          >\n            <ListItemIcon>\n              <PublicIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Pays\"} />\n          </ListItem>\n\n          <ListItem\n            button\n            key={\"Entreprises\"}\n            onClick={(event) => setFilename(\"entreprises\")}\n          >\n            <ListItemIcon>\n              <BusinessIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Entreprises\"} />\n          </ListItem>\n        </List>\n\n        <Divider />\n\n        <List>\n          <ListItem button key={\"About\"}>\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n        <Tabs\n          value={tabValue}\n          onChange={handleChangeTab}\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<TableChartIcon />} aria-label=\"chart\" />\n          <Tab icon={<TableRowsIcon />} aria-label=\"table\" />\n        </Tabs>\n        {tabValue === 0 ? (\n          <Treemap filename={filename} drawerOpen={open} />\n        ) : (\n          <div />\n        )}\n      </Main>\n    </Box>\n  );\n}\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\n\n\nfunction App() {\n\n  const [getMessage, setGetMessage] = useState({})\n\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_DOMAIN + '/api').then(response => {\n      setGetMessage(response)\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      {getMessage.status === 200 ?\n        <Router>\n          <Route exact path='/' component={Home} ></Route>\n        </Router >\n        :\n        <h3>LOADING</h3>}</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}