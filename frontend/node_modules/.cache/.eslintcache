[{"/Users/nicolasesnis/code/carbon_treemap/frontend/src/index.js":"1","/Users/nicolasesnis/code/carbon_treemap/frontend/src/reportWebVitals.js":"2","/Users/nicolasesnis/code/carbon_treemap/frontend/src/App.js":"3","/Users/nicolasesnis/code/carbon_treemap/frontend/src/pages/Home.js":"4"},{"size":500,"mtime":1633935620824,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1633935620826,"results":"7","hashOfConfig":"6"},{"size":811,"mtime":1633968521974,"results":"8","hashOfConfig":"6"},{"size":2985,"mtime":1633997624315,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1lcr935",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/nicolasesnis/code/carbon_treemap/frontend/src/index.js",[],["20","21"],"/Users/nicolasesnis/code/carbon_treemap/frontend/src/reportWebVitals.js",[],"/Users/nicolasesnis/code/carbon_treemap/frontend/src/App.js",[],"/Users/nicolasesnis/code/carbon_treemap/frontend/src/pages/Home.js",["22","23"],"// import { Row, Col, Container, Card, CardGroup, Breadcrumb, CardColumns } from 'react-bootstrap';\nimport Plotly from 'plotly.js';\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nfunction Home() {\n    const [treeData, setTreeData] = useState(false);\n    const [treeLayout, setTreeLayout] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setLoading(true)\n        setTreeData(false)\n        fetch(process.env.REACT_APP_DOMAIN + '/get-data')\n            .then(response => response.json())\n            .then(resData => {\n                console.log(resData.avg_carbon_per_capi)\n                setTreeData(\n                    {\n                        type: \"treemap\",\n                        labels: resData.label,\n                        parents:resData.parent,\n                        values: resData.value,\n                        branchvalues:'total',\n                        marker:{\n                            colors:resData.color,\n                            // colorscale:'RdBu',\n                            colorscale:'RdYlBu',\n                            cmid:resData.avg_carbon_per_capi\n                        },\n                        hovertemplate:'<b>%{label} </b> <br> Capitalization: %{value}<br> Carbon / Capitalization: %{color:.2f}'\n                    }\n                )\n                setTreeLayout(\n                    {margin: {t:50, l:25, r:25, b:25},\n                    title: 'carbon treemap',\n                    autosize: true,\n                    font: {\n                        size: 14,\n                        plot_bgcolor: 'black'\n                    }}\n                )\n                setLoading(false)\n            })\n    }, [])\n\n    useEffect(() => {\n        if (!loading){ \n            Plotly.react('treemap', [treeData], treeLayout) \n        }\n    }, [treeData, treeLayout, loading])\n\n    return (\n        <div >\n            <Grid container >\n            <Grid item xs={2} style={{backgroundColor: 'darkGrey'}}>Sidebar\n            <br/><br/>\n            Project by Hiro & Nico\n            <br/><br/>\n            The example below visualizes a breakdown of capitalization (corresponding to sector width) and carbon emissions (corresponding to sector color) by industry and company level. \n            {/* For example, when exploring the data you can see that although the East region is behaving poorly, the Tyler county is still above average -- however, its performance is reduced by the poor success rate of salesperson GT. */}\n\n\n            \n            </Grid>\n                <Grid item xs={10}>\n                    {(loading === true && !treeData)  ?  <div>Loading data</div>  : <div id='treemap' style={{ height: '100vh' }}/>}\n                    \n                </Grid>\n            </Grid >\n        </div >\n    )\n}\n\nexport default Home;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":5,"column":8,"nodeType":"30","messageId":"31","endLine":5,"endColumn":14},{"ruleId":"28","severity":1,"message":"32","line":6,"column":8,"nodeType":"30","messageId":"31","endLine":6,"endColumn":16},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","no-global-assign","no-unsafe-negation"]